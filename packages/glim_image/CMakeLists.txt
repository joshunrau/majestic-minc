# CMakeFiles.txt for the glim_image
#
# Vladimir S. FONOV - vladimir.fonov@gmail.com

CMAKE_MINIMUM_REQUIRED(VERSION 3.1)


SET(GLIM_IMAGE_PACKAGE_VERSION_MAJOR 1)
SET(GLIM_IMAGE_PACKAGE_VERSION_MINOR 2)
SET(GLIM_IMAGE_PACKAGE_VERSION_PATCH 00)

IF(NOT MINC_TOOLKIT_BUILD)

  PROJECT(glim_image)

  # Packaging defines
  SET(CPACK_GENERATOR TGZ)
  SET(CPACK_PACKAGE_VERSION_MAJOR ${GLIM_IMAGE_PACKAGE_VERSION_MAJOR})
  SET(CPACK_PACKAGE_VERSION_MINOR ${GLIM_IMAGE_PACKAGE_VERSION_MINOR})
  SET(CPACK_PACKAGE_VERSION_PATCH ${GLIM_IMAGE_PACKAGE_VERSION_PATCH})
  INCLUDE(CPack)

  FIND_PACKAGE( LIBMINC REQUIRED )
ENDIF(NOT MINC_TOOLKIT_BUILD)

SET(PACKAGE "glim_image")
SET(PACKAGE_BUGREPORT "jason@bic.mni.mcgill.ca")

SET(PACKAGE_NAME "glim_image")
SET(PACKAGE_VERSION "${GLIM_IMAGE_PACKAGE_VERSION_MAJOR}.${GLIM_IMAGE_PACKAGE_VERSION_MINOR}.${GLIM_IMAGE_PACKAGE_VERSION_PATCH}")
SET(PACKAGE_STRING "${PACKAGE_NAME} ${PACKAGE_VERSION}")


SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_C_STANDARD 99)


INCLUDE( ${LIBMINC_USE_FILE} )
LINK_LIBRARIES(${VOLUME_IO_LIBRARIES} ${LIBMINC_LIBRARIES})

ADD_DEFINITIONS(-DHAVE_CONFIG_H)

# check for prereqs
INCLUDE(CheckIncludeFiles)
INCLUDE(CheckSymbolExists)

CHECK_SYMBOL_EXISTS(finite      "math.h" HAVE_FINITE)
CHECK_SYMBOL_EXISTS(isfinite    "math.h" HAVE_ISFINITE)

CHECK_INCLUDE_FILES(sys/dir.h   HAVE_SYS_DIR_H)
CHECK_INCLUDE_FILES(sys/stat.h  HAVE_SYS_STAT_H)
CHECK_INCLUDE_FILES(sys/types.h HAVE_SYS_TYPES_H)
CHECK_INCLUDE_FILES(unistd.h    HAVE_UNISTD_H)
CHECK_INCLUDE_FILES(memory.h    HAVE_MEMORY_H)
CHECK_INCLUDE_FILES(malloc.h    HAVE_MALLOC_H)
CHECK_INCLUDE_FILES(stdlib.h    HAVE_STDLIB_H)
CHECK_INCLUDE_FILES(inttypes.h  HAVE_INTTYPES_H)
CHECK_INCLUDE_FILES(string.h    HAVE_STRING_H)
CHECK_INCLUDE_FILES(strings.h   HAVE_STRINGS_H)
CHECK_INCLUDE_FILES(ctype.h     HAVE_CTYPE_H)

# HACKY HACK
IF(APPLE)
  SET(HAVE_ISFINITE ON)
ENDIF(APPLE)


# aliases
SET(VERSION "${PACKAGE_VERSION}")

# others
CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config.h)
CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/epm-header.in  ${CMAKE_CURRENT_BINARY_DIR}/epm-header)
# SET(PERL ${PERL_EXECUTABLE})
INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR} )

ADD_EXECUTABLE(glim_image 
  glim.c 
  glim_image.c 
  matrix.c 
  smoothness.c
  glim.h 
  matrix.h 
  smoothness.h )


INSTALL(TARGETS 
  glim_image 
  DESTINATION bin)
