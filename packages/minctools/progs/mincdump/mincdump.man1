.\"                                      Hey, EMACS: -*- nroff -*-
.\" $Header: /private-cvsroot/minc/progs/mincdump/mincdump.man1,v 1.2 2004-05-20 21:52:08 bert Exp $
.TH MINCDUMP 1 "$Date: 2004-05-20 21:52:08 $" "" "MINC User's Guide"
.SH NAME
mincdump \- Convert minc files to ASCII form (CDL)
.SH SYNOPSIS
.ft B
.HP
mincdump
.nh
\%[-c]
\%[-h]
\%[-v \fIvar1,...\fP]
\%[-b \fIlang\fP]
\%[-f \fIlang\fP]
\%[-l \fIlen\fP]
\%[-n \fIname\fP]
\%[-p \fIf_digits[,d_digits]\fP]
\%\fIfile\fP
.hy
.ft
.SH DESCRIPTION
\fBmincdump\fP is based upon the netCDF tool \fBncdump\fR, modified to 
work with both MINC 1 (netCDF) and MINC 2 (HDF5) format files.  It is intended
for use primarily with scripts such as \fBmincdiff\fR and \fBmincheader\fR.
Since it was not created at the Montreal Neurological Insititute it does not
follow the usual conventions for MINC programs.

\fBmincdump\fP generates an ASCII representation of a specified minc file on
standard output.  The ASCII representation is in a form called CDL
(``network Common Data form Language'') that can be viewed, edited, or serve
as input to \fBncgen\fP.  \fBncgen\fP is a companion program that can
generate a binary minc file from a CDL file.  Hence \fBncgen\fP and
\fBmincdump\fP can be used as inverses to transform the data representation
between binary and ASCII representations.  See \fBncgen\fP for a description
of CDL and netCDF representations.
.LP
\fBmincdump\fP defines a default format used for each type of netCDF data, but
this can be changed if a `C_format' attribute is defined for a netCDF
variable.  In this case, \fBmincdump\fP will use the `C_format' attribute to
format each value.  For example, if floating-point data for the netCDF
variable `Z' is known to be accurate to only three significant digits, it
would be appropriate to use the variable attribute
.RS
.HP
Z:C_format = "%.3g"
.RE
.LP
\fBmincdump\fP may also be used as a simple browser for netCDF data
files, to display the dimension names and sizes; variable names, types,
and shapes; attribute names and values; and optionally, the values of
data for all variables or selected variables in a netCDF file.
.LP
\fBmincdump\fP uses `_' to represent data values that are equal to the
`_FillValue' attribute for a variable, intended to represent data that
has not yet been written.  If a variable has no `_FillValue' attribute, the
default fill value for the variable type is used if the variable is not of
byte type.
.SH OPTIONS
.IP "\fB-c\fP"
Show the values of \fIcoordinate\fP variables (variables that are also
dimensions) as well as the declarations of all dimensions, variables, and
attribute values.  Data values of non-coordinate variables are not included
in the output.  This is the most suitable option to use for a brief look at
the structure and contents of a netCDF file.
.IP "\fB-h\fP"
Show only the \fIheader\fP information in the output, that is the
declarations of dimensions, variables, and attributes but no data values for
any variables.  The output is identical to using the \fB-c\fP option except
that the values of coordinate variables are not included.  (At most one of
\fB-c\fP or \fB-h\fP options may be present.)
.IP "\fB-v\fP \fIvar1,...,varn\fP"
The output will include data values for the specified variables, in addition
to the declarations of all dimensions, variables, and attributes.  One or
more variables must be specified by name in the comma-delimited list
following this option.  The list must be a single argument to the command,
hence cannot contain blanks or other white space characters.  The named
variables must be valid netCDF variables in the input-file.  The default,
without this option and in the absence of the \fB-c\fP or \fB-h\fP
options, is to include data values for \fIall\fP variables in the output.
.IP "\fB-b\fP \fIlang\fP"
A brief annotation in the form of a CDL comment (text beginning with the
characters ``//'') will be included in the data section of the output for
each `row' of data, to help identify data values for multidimensional
variables.  If \fIlang\fP begins with `C' or `c', then C language
conventions will be used (zero-based indices, last dimension varying
fastest).  If \fIlang\fP begins with `F' or `f', then Fortran language
conventions will be used (one-based indices, first dimension varying
fastest).  In either case, the data will be presented in the same order;
only the annotations will differ.  This option is useful for browsing
through large volumes of multidimensional data.
.IP "\fB-f\fP \fIlang\fP"
Full annotations in the form of trailing CDL comments (text beginning with
the characters ``//'') for every data value (except individual characters in
character arrays) will be included in the data section.  If \fIlang\fP
begins with `C' or `c', then C language conventions will be used (zero-based
indices, last dimension varying fastest).  If \fIlang\fP begins with `F' or
`f', then Fortran language conventions will be used (one-based indices,
first dimension varying fastest).  In either case, the data will be
presented in the same order; only the annotations will differ.  This option
may be useful for piping data into other filters, since each data value
appears on a separate line, fully identified.
.IP "\fB-l\fP \fIlen\fP"
Changes the default maximum line length (80) used in formatting lists of
non-character data values.
.IP "\fB-n\fP \fIname\fP"
CDL requires a name for a netCDF data set, for use by \fBncgen -b\fP in
generating a default netCDF file name.  By default, \fImincdump\fP constructs
this name from the last component of the pathname of the input netCDF file
by stripping off any extension it has.  Use the \fB-n\fP option to specify a
different name.  Although the output file name used by \fBncgen -b\fP can be
specified, it may be wise to have \fImincdump\fP change the default name to
avoid inadvertantly overwriting a valuable netCDF file when using
\fBmincdump\fP, editing the resulting CDL file, and using \fBncgen -b\fP to
generate a new netCDF file from the edited CDL file.
.IP "\fB-p\fP \fIfloat_digits[,double_digits]\fP"
Specifies default precision (number of significant digits) to use in displaying
floating-point or double precision data values for attributes and variables.
If specified, this value overrides the value of the `C_format' attribute for
any variable that has such an attribute.  
Floating-point data will be displayed with
\fIfloat_digits\fP significant digits.  If \fIdouble_digits\fP is also
specified, double-precision values will be displayed with that many
significant digits.  In the absence of any
\fB-p\fP specifications, floating-point and double-precision data are
displayed with 7 and 15 significant digits respectively.  CDL files can be
made smaller if less precision is required.  If both floating-point and
double-presision precisions are specified, the two values must appear
separated by a comma (no blanks) as a single argument to the command.
If you really want every last bit of precision from the netCDF file
represented in the CDL file for all possible floating-point values, you will
have to specify this with \fB-p 9,17\fP (according to Theorem 15 of the
paper listed under REFERENCES).

.SH EXAMPLES
.LP
Look at the structure of the data in the netCDF file `\fBfoo.mnc\fP':
.RS
.HP
mincdump -c foo.mnc
.RE
.LP
Produce an annotated CDL version of the structure and data in the
netCDF file `\fBfoo.mnc\fP', using C-style indexing for the annotations:
.RS
.HP
mincdump -b c foo.mnc > foo.cdl
.RE
.LP
Output data for only the variables `uwind' and `vwind' from the netCDF file
`\fBfoo.mnc\fP', and show the floating-point data with only three significant
digits of precision:
.RS
.HP
mincdump -v uwind,vwind -p 3 foo.mnc
.RE
.LP
Produce a fully-annotated (one data value per line) listing of the data for
the variable `omega', using Fortran conventions for indices, and changing the
netCDF dataset name in the resulting CDL file to `omega':
.RS
.HP
mincdump -v omega -f fortran -n omega foo.mnc > Z.cdl
.RE
.SH AUTHOR
Originally written by members of the Unidata Program at the University 
Corporation for Atmospheric Research.

Modified by Bert Vincent (bert@bic.mni.mcgill.ca) for use with both 
netCDF and HDF5 files.

.SH COPYRIGHTS
Copyright \(co University Corporation for Atmospheric Research
.SH REFERENCES
 \fIWhat
Every Computer Scientist should Know About Floating-Point Arithmetic\fP, D.
Goldberg, \fBACM Computing Surveys, Vol. 23, No. 1\fP, March 1991, pp. 5-48.

.SH "SEE ALSO"
.LP
.BR ncdump (1),
.BR ncgen (1),
.BR netcdf (3)
.SH BUGS
.LP
Character arrays that contain a null-byte are treated like C strings, so no
characters after the null byte appear in the output.

Multidimensional character string arrays are not handled well, since the CDL
syntax for breaking a long character string into several shorter lines is
weak.

There should be a way to specify that the data should be displayed in
`record' order, that is with the all the values for `record' variables
together that have the same value of the record dimension.
