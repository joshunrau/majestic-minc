# CMakeFiles.txt for the ray_trace
#
# Vladimir S. FONOV - vladimir.fonov@gmail.com

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

SET(RAY_TRACE_PACKAGE_VERSION_MAJOR 1)
SET(RAY_TRACE_PACKAGE_VERSION_MINOR 0)
SET(RAY_TRACE_PACKAGE_VERSION_PATCH 40)

IF(NOT MINC_TOOLKIT_BUILD)

  PROJECT(ray_trace "C")

  # Packaging defines
  SET(CPACK_GENERATOR TGZ)
  SET(CPACK_PACKAGE_VERSION_MAJOR ${RAY_TRACE_PACKAGE_VERSION_MAJOR})
  SET(CPACK_PACKAGE_VERSION_MINOR ${RAY_TRACE_PACKAGE_VERSION_MINOR})
  SET(CPACK_PACKAGE_VERSION_PATCH ${RAY_TRACE_PACKAGE_VERSION_PATCH})
  INCLUDE(CPack)

  FIND_PACKAGE( LIBMINC REQUIRED )
  FIND_PACKAGE( BICPL REQUIRED )
  FIND_PACKAGE( BICGL REQUIRED )
  FIND_PACKAGE( Perl REQUIRED )
  FIND_PACKAGE( Threads )
  FIND_PACKAGE( GL REQUIRED )
  FIND_PACKAGE( GLU REQUIRED )
  FIND_PACKAGE( GLUT REQUIRED )
ENDIF(NOT MINC_TOOLKIT_BUILD)

IF(APPLE)
  SET(HAVE_APPLE_OPENGL_FRAMEWORK ON)
ENDIF(APPLE)

SET(PACKAGE "ray_trace")
SET(PACKAGE_BUGREPORT "a.janke@gmail.com")

SET(PACKAGE_NAME "ray_trace")
SET(PACKAGE_VERSION "${RAY_TRACE_PACKAGE_VERSION_MAJOR}.${RAY_TRACE_PACKAGE_VERSION_MINOR}.${RAY_TRACE_PACKAGE_VERSION_PATCH}")
SET(PACKAGE_STRING "${PACKAGE_NAME} ${PACKAGE_VERSION}")


INCLUDE( ${LIBMINC_USE_FILE} )
INCLUDE( ${BICPL_USE_FILE} )

SET(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES} ${LIBMINC_INCLUDE_DIRS} ${BICPL_INCLUDE_DIRS})

ADD_DEFINITIONS(-DHAVE_CONFIG_H)
IF(NOT APPLE)
ADD_DEFINITIONS(-D_XOPEN_SOURCE=500)
ENDIF(NOT APPLE)

# aliases
SET(VERSION "${PACKAGE_VERSION}")


# check for prereqs
INCLUDE(CheckIncludeFiles)

CHECK_INCLUDE_FILES(float.h     HAVE_FLOAT_H)
CHECK_INCLUDE_FILES(dlfcn.h     HAVE_FLFCN_H)
CHECK_INCLUDE_FILES(sys/stat.h  HAVE_SYS_STAT_H)
CHECK_INCLUDE_FILES(sys/types.h HAVE_SYS_TYPES_H)
CHECK_INCLUDE_FILES(values.h    HAVE_VALUES_H)
CHECK_INCLUDE_FILES(unistd.h    HAVE_UNISTD_H)
CHECK_INCLUDE_FILES(memory.h    HAVE_MEMORY_H)
CHECK_INCLUDE_FILES(malloc.h    HAVE_MALLOC_H)
CHECK_INCLUDE_FILES(stdlib.h    HAVE_STDLIB_H)
CHECK_INCLUDE_FILES(fcntl.h     HAVE_FCNTL_H)
CHECK_INCLUDE_FILES(vfork.h     HAVE_VFORK_H)
CHECK_INCLUDE_FILES(inttypes.h  HAVE_INTTYPES_H)
CHECK_INCLUDE_FILES(string.h    HAVE_STRING_H)
CHECK_INCLUDE_FILES(strings.h   HAVE_STRINGS_H)

IF(FREEGLUT_FOUND) 
 SET(HAVE_FREEGLUT_H ON)
ELSE()
 CHECK_INCLUDE_FILES(GL/freeglut.h HAVE_FREEGLUT_H)
ENDIF()

# CHECK_INCLUDE_FILES(bicpl/deform.h HAVE_DEFORM_H)

IF(CMAKE_USE_PTHREADS_INIT)
  SET(HAVE_PTHREAD ON)
ELSE(CMAKE_USE_PTHREADS_INIT)
  SET(HAVE_PTHREAD OFF)
ENDIF(CMAKE_USE_PTHREADS_INIT)

IF(WINDOWS)
  CHECK_INCLUDE_FILES(windows.h   HAVE_WINDOWS_H)
ELSE(WINDOWS)
  SET(HAVE_WINDOWS_H OFF)
ENDIF(WINDOWS)

# IF(NOT HAVE_DEFORM_H)
#   message(WARNING "cannot find deform.h - make sure you have bicpl 1.4.0 or later")
# ENDIF(NOT HAVE_DEFORM_H)

# others
CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/config.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/config.h)
CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/epm-header.in  ${CMAKE_CURRENT_BINARY_DIR}/epm-header)

INCLUDE_DIRECTORIES( ${CMAKE_CURRENT_BINARY_DIR} ${CMAKE_CURRENT_SOURCE_DIR}/Include )

SET(PERL ${PERL_EXECUTABLE})

INCLUDE_DIRECTORIES( ${BICGL_INCLUDE_DIRS} )
LINK_DIRECTORIES( ${BICGL_LIBRARY_DIRS} )

ADD_EXECUTABLE(ray_trace ray_trace.c intersect.c trace.c  volume.c )

IF(LIBMINC_STATIC_LIBRARIES AND BICPL_STATIC_LIBRARIES)
  TARGET_LINK_LIBRARIES(ray_trace ${BICGL_LIBRARIES} ${BICPL_STATIC_LIBRARIES} ${LIBMINC_STATIC_LIBRARIES})
ELSE(LIBMINC_STATIC_LIBRARIES AND BICPL_STATIC_LIBRARIES)
  TARGET_LINK_LIBRARIES(ray_trace ${BICGL_LIBRARIES} ${BICPL_LIBRARIES} ${LIBMINC_LIBRARIES})
ENDIF(LIBMINC_STATIC_LIBRARIES AND BICPL_STATIC_LIBRARIES)

INSTALL(TARGETS ray_trace DESTINATION bin)
